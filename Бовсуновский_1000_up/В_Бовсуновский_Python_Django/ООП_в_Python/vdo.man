### [Установка Python и настройка PyCharm.](https://www.youtube.com/watch?v=0Qe9H8pjO_o&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=1&amp;pp=iAQB)
### [Зачем нужны методы с двумя нижними подчёркиваниями в Python?](https://www.youtube.com/watch?v=5Q-GpfiPhes&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=2&amp;pp=iAQB)
### [Часть 1. Сила поэтапного практического освоения языка программирования Python.](https://www.youtube.com/watch?v=VMiPvfl2R1c&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=3&amp;pp=iAQB)
### [(Python3).Ваш план и ответ на вопрос, а как собственно изучать язык программирования.](https://www.youtube.com/watch?v=R6RO8UKspZY&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=4&amp;pp=iAQB)
### [Основные концепции программирования классов в Python.](https://www.youtube.com/watch?v=hdorxtnJvjs&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=5&amp;pp=iAQB)
### [Агрегация и композиция в ООП Python. Почему Важно?](https://www.youtube.com/watch?v=0uu1Clijqog&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=6&amp;pp=iAQB)
### [Ubuntu мои впечатления после трёх лет работы на Linux.](https://www.youtube.com/watch?v=t6gTePzyqEc&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=7&amp;pp=iAQB)
### [Код понимаю - писать не могу. Рассказал что делать. (писать код могут все - это закон).](https://www.youtube.com/watch?v=zdGrJjGDtT4&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=8&amp;pp=iAQB)
### [Магия Python. Как новичку начать писать код, который не все старички могут писать?](https://www.youtube.com/watch?v=M-Fb5Rj7GEo&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=9&amp;pp=iAQB)
### [Практика ООП в Python. Курс 4 часть 1](https://www.youtube.com/watch?v=u0UtnAoMuBo&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=10&amp;pp=iAQB)
### [Классы в Питон. Основное понимание на практике. Часть 2 курс1.](https://www.youtube.com/watch?v=dos7Den_9fE&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=11&amp;pp=iAQB)
### [Глубокое понимание использования конструктора __init__, для инициализации объектов в Python (ООП).](https://www.youtube.com/watch?v=cM2lr3iyF0w&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=12&amp;pp=iAQB)
### [Классы в Python 3 (ООП). План изучения.](https://www.youtube.com/watch?v=oVTHIuKKhDU&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=13&amp;pp=iAQB)
### [1. Сергей Осадчий наработка навыков ООП. Я только направялю.](https://www.youtube.com/watch?v=2mAmJV0Jecw&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=14&amp;pp=iAQB)
### [Переосмысление - Python объектно-ориентированное программирование.](https://www.youtube.com/watch?v=aBjx9Ps5E0U&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=15&amp;pp=iAQB)
### [С чего начинается магия Python ООП или как новичка научить писать код профессионально?](https://www.youtube.com/watch?v=CaNrQL_qR90&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=16&amp;pp=iAQB)
### [Классы в Python 3. Часть первая, курс первый (12 уроков).](https://www.youtube.com/watch?v=qBkfkwaF-sI&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=17&amp;pp=iAQB)
### [Обучение Python 3 ООП, профессионально и доступно.](https://www.youtube.com/watch?v=uhKn55D3a0w&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=18&amp;pp=iAQB)
### [Ключевые возможности Python. Переопределение __init__](https://www.youtube.com/watch?v=ShsRXKVgr44&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=19&amp;pp=iAQB)
### [Волшебные магические методы ,Пайтон, как изучить системно (высший пилотаж).](https://www.youtube.com/watch?v=mx7-cfsGhhk&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=20&amp;pp=iAQB)
### [Как прибыльно работать в партнёрке Django(python) spb-tut.ru?](https://www.youtube.com/watch?v=oR6B3LBMzXY&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=21&amp;pp=iAQB)
### [Расширение глубокое  изучение Python для новичка, что такое настоящее обучение программированию?](https://www.youtube.com/watch?v=_cMu-24dXVc&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=22&amp;pp=iAQB)
### [Как новичку начать писать в стиле ООП, именно молниеносно изучить.](https://www.youtube.com/watch?v=in7RPAihOb4&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=23&amp;pp=iAQB)
### [4. (Python, Kotlin)Абстракция и композиция в ООП.](https://www.youtube.com/watch?v=8atxnvIrdJc&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=24&amp;pp=iAQB)
### [ООП в Python. Создание свойств. Часть 1, курс 3.](https://www.youtube.com/watch?v=pxZ9wY6dFyY&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=25&amp;pp=iAQB)
### [(Python, Kotlin). 1. Ведение в курс ООП простыми словами. (ссылки в описании)](https://www.youtube.com/watch?v=2iesst5CU7k&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=26&amp;pp=iAQB)
### [Нарабатываем опыт Python ООП. Как делать правильно?](https://www.youtube.com/watch?v=0bLus_ZaitE&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=27&amp;pp=iAQB)
### [Почему я выбираю Kivy (Python for Android)?](https://www.youtube.com/watch?v=VPUvOwdzQJI&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=28&amp;pp=iAQB)
### [Python, Kotlin, Java. Вот так просто можно изучать любое количество языков программирования.](https://www.youtube.com/watch?v=1CjgfpEn4Cs&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=29&amp;pp=iAQB)
### [Классы в Python 3. Закрытые атрибуты и закрытые методы.](https://www.youtube.com/watch?v=1ec4WyU4eAo&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=30&amp;pp=iAQB)
### [Часть 2. Сила поэтапного практического освоения языка программирования Python.](https://www.youtube.com/watch?v=IOqWbA90MiA&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=31&amp;pp=iAQB)
### [7. (Python, Kotlin)Инкапсуляция ООП.](https://www.youtube.com/watch?v=igYamk3KUEI&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=32&amp;pp=iAQB)
### [Организация кода в Python ООП. Что понять для начала.](https://www.youtube.com/watch?v=ZL2L0gQhMG8&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=33&amp;pp=iAQB)
### [Глубокое погружение в разработку на Python ООП.](https://www.youtube.com/watch?v=hAymxe53P8M&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=34&amp;pp=iAQB)
### [Доступный, быстрый и простой способ уверенно писать в стиле ООП Python.](https://www.youtube.com/watch?v=FgzcyfvjKEs&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=35&amp;pp=iAQB)
### [Django 2. Рассказал практику -  быстрого изучения Django 2. (ссылки в описании видео)](https://www.youtube.com/watch?v=XLcWbpo1_tU&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=36&amp;pp=iAQB)
### [Python ООП. Как правильно импортировать классы, документирование клссов?](https://www.youtube.com/watch?v=Vl35KKrcsCM&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=37&amp;pp=iAQB)
### [Курсы, где можно пройти весь путь Python ООП. Настоящее программирование.](https://www.youtube.com/watch?v=3KmUlZcmrpk&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=38&amp;pp=iAQB)
### [3. (Python, Kotlin) Что такое объект в ООП?](https://www.youtube.com/watch?v=2OEr6ZLP_ZI&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=39&amp;pp=iAQB)
### [10.(Python, Kotlin) Михины(примеси) в ООП.](https://www.youtube.com/watch?v=k-orkxHfqJ4&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=40&amp;pp=iAQB)
### [Время и эффективность при изучении Python (ООП).](https://www.youtube.com/watch?v=e2AVoJ8E3yc&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=41&amp;pp=iAQB)
### [Очень мощный стиль программирования Python и новичок будет легко разрабатывать понимая его.](https://www.youtube.com/watch?v=m2IOa4TYJVg&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=42&amp;pp=iAQB)
### [Еще один участник в школе показал себе, что может писать код.](https://www.youtube.com/watch?v=7cZ9xrjmEbA&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=43&amp;pp=iAQB)
### [5. (Python, Kotlin)Пример применения абстракции в Джанго.](https://www.youtube.com/watch?v=w4lH_7i1j2s&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=44&amp;pp=iAQB)
### [Строки Python - это последовательности.](https://www.youtube.com/watch?v=IHDmdx-CqZ4&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=45&amp;pp=iAQB)
### [ООП. Наследование, адаптация,расширение классов в Python.](https://www.youtube.com/watch?v=lSay-f6JZrY&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=46&amp;pp=iAQB)
### [Комплексный-системный подход изучение Python - как это?](https://www.youtube.com/watch?v=j-HP9CGmrQo&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=47&amp;pp=iAQB)
### [Методы строк в Python. Как работать?](https://www.youtube.com/watch?v=f6oO0qjwhfA&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=48&amp;pp=iAQB)
### [Уроки Python Django. Как правильно смотреть видео курсы и разъяснение по группе гугл?](https://www.youtube.com/watch?v=4091aNQNYPE&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=49&amp;pp=iAQB)
### [Видео ссылка. Вот пример, пишет парень на 2-х языках через5 месяцев.](https://www.youtube.com/watch?v=hRbzeQn93QQ&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=50&amp;pp=iAQB)
### [2. ( Kotlin, Python) Парень, пишет за 5 месяцев на двух языках. Как это возможно?](https://www.youtube.com/watch?v=WUARZsci4jk&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=51&amp;pp=iAQB)
### [Живой пример Михаила из Минска, как стать программистом в короткие сроки и что делать.](https://www.youtube.com/watch?v=SSDkl1nPYGw&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=52&amp;pp=iAQB)
### [8. (Python, Kotlin)Наследование в ООП.](https://www.youtube.com/watch?v=Fayl_Jw84mY&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=53&amp;pp=iAQB)
### [Python. Дошли до классов, делаем так.  Формируем костяк. Рекомендации Дмитрию Наг.](https://www.youtube.com/watch?v=aDLvDe44h9o&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=54&amp;pp=iAQB)
### [Класс str в Python 3.](https://www.youtube.com/watch?v=WP8ERSZ6rzE&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=55&amp;pp=iAQB)
### [11. (Python, Kotlin)В конце видео самая верная методика изучения языков программирования.](https://www.youtube.com/watch?v=450TSVfYbRs&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=56&amp;pp=iAQB)
### [К шагу 9. Как использовать *args и **kwargs?](https://www.youtube.com/watch?v=xNc0G1887mU&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=57&amp;pp=iAQB)
### [Урок 5. Django 2 + методы изучения в том числе любого языка.](https://www.youtube.com/watch?v=1r2gUxMghhI&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=58&amp;pp=iAQB)
### [9. (Python, Kotlin)Добавление функциональности при помощи классов.](https://www.youtube.com/watch?v=pIxC7RqyEYQ&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=59&amp;pp=iAQB)
### [Стержень курса ООП spb-tut.ru.](https://www.youtube.com/watch?v=K9-uho_SguQ&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=60&amp;pp=iAQB)
### [Шаг 11. self, аргументы, методы, взаимодействие.](https://www.youtube.com/watch?v=wgVFZinAd4w&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=61&amp;pp=iAQB)
### [Извлечение по срезам строк в Python.](https://www.youtube.com/watch?v=mPhDCBW5E_U&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=62&amp;pp=iAQB)
### [Как не нужно изучать объектно-ориентрированное программирование Python?](https://www.youtube.com/watch?v=cZbgd3Jae50&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=63&amp;pp=iAQB)
### [Не забываем про конструкцию try/exept в Python.](https://www.youtube.com/watch?v=K2qbA7HHHYw&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=64&amp;pp=iAQB)
### [НЕ получается с Python? - обсудите в группе.](https://www.youtube.com/watch?v=uogbhgidrr0&amp;list=PLuZJ9n46uMzX3s7iUotQE0MH6Tii5BpUT&amp;index=65&amp;pp=iAQB)
